{
  "kind": "collectionType",
  "collectionName": "profile_residents",
  "info": {
    "singularName": "profile-resident",
    "pluralName": "profile-residents",
    "displayName": "Profile_Resident"
  },
  "options": {
    "draftAndPublish": true
  },
  "pluginOptions": {},
  "attributes": {
    "name": {
      "type": "string"
    },
    "Mother_name": {
      "type": "string",
      "required": true
    },
    "Father_name": {
      "type": "string",
      "required": true
    },
    "date_of_birth": {
      "type": "date"
    },
    "date_of_registration": {
      "type": "date",
      "required": true
    },
    "nick_name": {
      "type": "string"
    },
    "address_parents": {
      "type": "string"
    },
    "address_kinds": {
      "type": "string"
    },
    "number": {
      "type": "biginteger"
    },
    "branch": {
      "type": "relation",
      "relation": "manyToOne",
      "target": "api::branch.branch",
      "inversedBy": "profile_residents"
    },
    "assessment": {
      "type": "relation",
      "relation": "manyToOne",
      "target": "api::assessment.assessment",
      "inversedBy": "profile_residents"
    },
    "resident_programs": {
      "type": "relation",
      "relation": "oneToMany",
      "target": "api::resident-program.resident-program",
      "mappedBy": "profile_resident"
    },
    "resident_relatives": {
      "type": "relation",
      "relation": "oneToMany",
      "target": "api::resident-relative.resident-relative",
      "mappedBy": "profile_resident"
    },
    "reports": {
      "type": "relation",
      "relation": "oneToMany",
      "target": "api::report.report",
      "mappedBy": "profile_resident"
    },
    "comments": {
      "type": "customField",
      "customField": "plugin::ckeditor5.CKEditor",
      "options": {
        "preset": "defaultHtml"
      }
    },
    "gender": {
      "type": "enumeration",
      "required": true,
      "enum": [
        "Boy",
        "Girl"
      ]
    },
    "avatar": {
      "type": "media",
      "multiple": true,
      "allowedTypes": [
        "images",
        "files",
        "videos",
        "audios"
      ]
    },
    "class": {
      "type": "relation",
      "relation": "manyToOne",
      "target": "api::class.class",
      "inversedBy": "profile_residents"
    },
    "medical_informations": {
      "type": "relation",
      "relation": "oneToMany",
      "target": "api::medical-information.medical-information",
      "mappedBy": "profile_resident"
    }
  }
}
